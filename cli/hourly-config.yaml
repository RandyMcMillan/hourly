config_override: hourly-config.yaml

repo:
  gitdir: .
  start_date: null 
  end_date: null 
  errant_clocks: [] # list of commit hashes to skip
  ignore: null # ignore work containing string, ie 'pro bono'
  match_logs: False # should all clock ins be paired with clock outs

report:
  timesheet: true # print timesheet
  work: false # print work log
  outfile: null # csv file to save report to
  wage: null # numerical wage to multiply by hours
  currency: '' # string currency to display earnings
  pandas:
    display:
      max_rows: null
      max_columns: 10
      max_colwidth: 64
      width: 600


commit:
  clock: null # 'in' will update WorkLog.md and commit with message "clock-in"
  tminus: null # '15m' will prepend 'T-15m' to commit message (ignored if clock is null)
  message: '' # 'my message' will append 'my message' to commit message

work_log: 
  filename: WorkLog.md
  header_depth: 1 # determines markdown header size
  bullet: '*'

vis: # set to null to prevent plotting
  frequency: '1 d' # start small - experienced users can override
  plotly: # plotly keywords
    figure:
      margin:
        pad: 0
    plot:
      show_link: False
      link_text: 'Export to plot.ly' 
      validate: True
      output_type: file
      include_plotlyjs: 'cdn'
      filename: hourly-work.html
      auto_open: True
      image: Null
      image_filename: plot_image
      # image_width: 800
      # image_height: 600
      config: Null
      include_mathjax: 'cdn'
      auto_play: True
      animation_opts: Null

hydra:
  help:
    # App name, override to match the name your app is known by
    app_name: hourly
    # Help header, customize to describe your app to your users
    header: |
      A simple hour tracker for git projects

      This application helps users clock in and out of git repos,
      as well as generate timesheets for invoicing.
      
      Configure hourly to ignore commits by keyword or hashes
    footer: |
      Powered by Hydra (https://hydra.cc)
      Use --hydra-help to view Hydra specific help
    # Basic Hydra flags:
    #   $FLAGS_HELP
    #
    # Config groups, choose one of:
    #   $APP_CONFIG_GROUPS: All config groups that does not start with hydra/.
    #   $HYDRA_CONFIG_GROUPS: All the Hydra config groups (starts with hydra/)
    #
    # Configuration generated with overrides:
    #   $CONFIG : Generated config
    #
    template: |
      ${hydra.help.header}
      == Configuration groups ==
      Compose your configuration from those groups (group=option)
      $APP_CONFIG_GROUPS
      == Config ==
      Override anything in the config (foo.bar=value)
      $CONFIG
      ${hydra.help.footer}
